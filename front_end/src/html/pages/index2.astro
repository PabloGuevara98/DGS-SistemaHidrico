---
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";

const title = "AdminLTE | Dashboard v2";
const path = "../../dist";
const mainPage = "dashboard";
const page = "index2";
---

<!doctype html>
<html lang="en">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />

    <!-- apexcharts -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
      integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
      crossorigin="anonymous"
    />
  </head>

  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
         
          <!-- SHAOVERSION -->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
                <div class="col-sm-6">
                    <h3 class="mb-0">Alertas del Sistema Hídrico</h3>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-end">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">
                            Alertas
                        </li>
                    </ol>
                </div>
            </div>
            <!--end::Row-->
        </div>
        
        <div class="container-fluid" id="alertas-container">
            <!-- Aquí se agregarán dinámicamente las tarjetas de alerta -->
        </div>
        
        <script>
            // Datos de ejemplo: alertas divididas por sectores y tipo
            const alertasPorSector = {
                "Sector A": {
                    "Nivel de Agua": "Alto",
                    "Presión": "Baja",
                    "Calidad del Agua": "Mala",
                    "Flujo": "Bajo"
                },
                "Sector B": {
                    "Nivel de Agua": "Medio",
                    "Presión": "Alta",
                    "Calidad del Agua": "Buena",
                    "Flujo": "Medio"
                }
            };
        
            // Función para agregar una alerta al contenedor
            function agregarAlerta(sector, tipo, mensaje) {
                const container = document.getElementById('alertas-container');
                const alerta = `
                    <div class="col-lg-3 col-md-6">
                        <div class="info-box ${clasePorTipo(tipo, mensaje)}">
                            <span class="info-box-icon">${iconoPorTipo(tipo)}</span>
        
                            <div class="info-box-content">
                                <span class="info-box-text">${sector}</span>
                                <span class="info-box-number">${tipo}: ${mensaje}</span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                `;
                container.insertAdjacentHTML('beforeend', alerta);
            }
        
            // Función para determinar la clase CSS según el tipo de alerta
            function clasePorTipo(tipo, mensaje) {
                switch (mensaje) {
                    case 'Alto':
                        return 'bg-danger';
                    case 'Bajo':
                        return 'bg-success';
                    case 'Medio':
                        return 'bg-warning';
                    case 'Buena':
                        return 'bg-info';
                    default:
                        return 'bg-secondary';
                }
            }
        
            // Función para determinar el icono según el tipo de alerta
            function iconoPorTipo(tipo) {
                switch (tipo) {
                    case 'Nivel de Agua':
                        return '<i class="bi bi-water"></i>';
                    case 'Presión':
                        return '<i class="bi bi-bar-chart-fill"></i>';
                    case 'Calidad del Agua':
                        return '<i class="bi bi-drop-fill"></i>';
                    case 'Flujo':
                        return '<i class="bi bi-arrow-down-right-circle-fill"></i>';
                    default:
                        return '';
                }
            }
        
            // Iterar sobre los sectores y alertas para agregarlas
            for (const sector in alertasPorSector) {
                const alertas = alertasPorSector[sector];
                for (const tipo in alertas) {
                    const mensaje = alertas[tipo];
                    agregarAlerta(sector, tipo, mensaje);
                }
            }
        </script>
        
         

        <!-- shaoFinal -->
        
    <Scripts path={path} />

    <!-- OPTIONAL SCRIPTS -->

    <!-- apexcharts -->
    <script
      src="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.min.js"
      integrity="sha256-+vh8GkaU7C9/wbSLIcwq82tQ2wTf44aOHA8HlBMwRI8="
      crossorigin="anonymous"></script>

    <script is:inline>
      // NOTICE!! DO NOT USE ANY OF THIS JAVASCRIPT
      // IT'S ALL JUST JUNK FOR DEMO
      // ++++++++++++++++++++++++++++++++++++++++++

      /* apexcharts
       * -------
       * Here we will create a few charts using apexcharts
       */

      //-----------------------
      // - MONTHLY SALES CHART -
      //-----------------------

      const sales_chart_options = {
        series: [
          {
            name: "Digital Goods",
            data: [28, 48, 40, 19, 86, 27, 90],
          },
          {
            name: "Electronics",
            data: [65, 59, 80, 81, 56, 55, 40],
          },
        ],
        chart: {
          height: 180,
          type: "area",
          toolbar: {
            show: false,
          },
        },
        legend: {
          show: false,
        },
        colors: ["#0d6efd", "#20c997"],
        dataLabels: {
          enabled: false,
        },
        stroke: {
          curve: "smooth",
        },
        xaxis: {
          type: "datetime",
          categories: [
            "2023-01-01",
            "2023-02-01",
            "2023-03-01",
            "2023-04-01",
            "2023-05-01",
            "2023-06-01",
            "2023-07-01",
          ],
        },
        tooltip: {
          x: {
            format: "MMMM yyyy",
          },
        },
      };

      const sales_chart = new ApexCharts(
        document.querySelector("#sales-chart"),
        sales_chart_options,
      );
      sales_chart.render();

      //---------------------------
      // - END MONTHLY SALES CHART -
      //---------------------------

      function createSparklineChart(selector, data) {
        const options = {
          series: [{ data }],
          chart: {
            type: "line",
            width: 150,
            height: 30,
            sparkline: {
              enabled: true,
            },
          },
          colors: ["var(--bs-primary)"],
          stroke: {
            width: 2,
          },
          tooltip: {
            fixed: {
              enabled: false,
            },
            x: {
              show: false,
            },
            y: {
              title: {
                formatter: function (seriesName) {
                  return "";
                },
              },
            },
            marker: {
              show: false,
            },
          },
        };

        const chart = new ApexCharts(document.querySelector(selector), options);
        chart.render();
      }

      const table_sparkline_1_data = [
        25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54,
      ];
      const table_sparkline_2_data = [
        12, 56, 21, 39, 73, 45, 64, 52, 36, 59, 44,
      ];
      const table_sparkline_3_data = [
        15, 46, 21, 59, 33, 15, 34, 42, 56, 19, 64,
      ];
      const table_sparkline_4_data = [
        30, 56, 31, 69, 43, 35, 24, 32, 46, 29, 64,
      ];
      const table_sparkline_5_data = [
        20, 76, 51, 79, 53, 35, 54, 22, 36, 49, 64,
      ];
      const table_sparkline_6_data = [
        5, 36, 11, 69, 23, 15, 14, 42, 26, 19, 44,
      ];
      const table_sparkline_7_data = [
        12, 56, 21, 39, 73, 45, 64, 52, 36, 59, 74,
      ];

      createSparklineChart("#table-sparkline-1", table_sparkline_1_data);
      createSparklineChart("#table-sparkline-2", table_sparkline_2_data);
      createSparklineChart("#table-sparkline-3", table_sparkline_3_data);
      createSparklineChart("#table-sparkline-4", table_sparkline_4_data);
      createSparklineChart("#table-sparkline-5", table_sparkline_5_data);
      createSparklineChart("#table-sparkline-6", table_sparkline_6_data);
      createSparklineChart("#table-sparkline-7", table_sparkline_7_data);

      //-------------
      // - PIE CHART -
      //-------------

      const pie_chart_options = {
        series: [700, 500, 400, 600, 300, 100],
        chart: {
          type: "donut",
        },
        labels: ["Chrome", "Edge", "FireFox", "Safari", "Opera", "IE"],
        dataLabels: {
          enabled: false,
        },
        colors: [
          "#0d6efd",
          "#20c997",
          "#ffc107",
          "#d63384",
          "#6f42c1",
          "#adb5bd",
        ],
      };

      const pie_chart = new ApexCharts(
        document.querySelector("#pie-chart"),
        pie_chart_options,
      );
      pie_chart.render();

      //-----------------
      // - END PIE CHART -
      //-----------------
    </script>
    <!--end::Script-->
  </body><!--end::Body-->
</html>
